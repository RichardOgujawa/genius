/*/ SETUP FILE /*/

@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@300&display=swap');


/*------------------------------------*/
/* Custom Properties */
/*------------------------------------*/
:root {
    /*clr prefix for colours*/
        /*Using hsl values so they can be manipulauted later if needs be*/
    --clr-dark: 0 0% 9%; 
    --clr-white: 0 0% 100%;
    --clr-accent: 60 100% 50%;
    --clr-gray: 0 0% 55%;

    /*fs prefix for font-size*/
       /*Using rem is better than using pixel values for example, it's responsive to the root font*/
    /*Smallest font-size*/
    font-size: 14px; 
    --fs-900: 9.375rem; 
    --fs-800: 6.25rem; 

    /*Small to x-large*/
    --fs-700: 3.214rem; 
    --fs-600: 2.286rem; 
    --fs-500: 1.5rem; 
    --fs-400: 1.214rem; 
    --fs-300: 1rem;
    
    --fs-200: 0.875rem;

    /*ff prefix for font-family*/
    --ff-sans-serif: "Outfit", sans-serif;

    /*Misc*/
    --padding-bigger: 1em 2em;
    --padding-smaller: 2em 4em;

    /*Transition*/
    --transition: var(--speed) ease; 
}

/*------------------------------------*/
/* Reset */
/*------------------------------------*/
*, 
*::before, 
*::after {
    margin: 0px;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    overflow-x: hidden;
    background:hsl(0, 0%, 9%);
    background-color:hsl(var(--clr-dark));
    line-height: 1.5; /*The default is 1.4 which is a bit small*/
    min-height: 100vh; /*This is to ensure that there's no issues when it comes to shorter screen sizes*/
    font-family: "Outfit", sans-serif;
    font-family: var(--ff-sans-serif, '"Outfit", sans-serif');
    font-size: 1.125rem; 
    font-size: var(--fs-400, 1.125rem); 
    color: hsl(0 0% 100%);
    color: hsl(var(--clr-white));
    font-weight: 400;
}

body, 
h1, 
h2, 
h3, 
h4, 
h5, 
p, 
figure, 
picture{
    margin: 0;
} 

h2{
    font-size: 3.5rem;
    font-size: var(--fs-700);
}

img, picture {
    max-width: 100%; 
        /*This ensures that the available space they have to live in shrinks as the viewport gets narrower*/
    display: block; 
        /*prevents some issues that may occur on images from time to time*/
}

input,
button, 
textarea, 
select {
    font: inherit; 
        /*By default these elements don't inherit font-properties*/
}

    /*This is to remove animations for people who have turned it off in their settings*/
@media screen and (prefers-reduced-motion: reduce), 
(update: slow) {
    *, 
    *::before, 
    *::after {
        animation-duration: 0.01ms !important; 
        animation-iteration-count: 1 !important; 
        transition-duration: 0.01ms !important; 
        scroll-behavior: auto !important;
    }
}


/*------------------------------------*/
/* Utility Classes */
/*------------------------------------*/

    /*Info: utility classes will be written in the following format .outer-inner, all other classes will be written as .outer_inner*/
.flex {
    display: flex;
    gap: 1rem;
    gap: var(--gap, 1rem); 
}

.grid {
    display: grid;
    gap: 1rem;
    gap: var(--gap, 1rem);
}

.container {
    padding-inline: 2em; 
        /*This will look at the left and the right side of your container only, not the top and the bottom. It has full browser support too.*/
    margin-inline: 2em; 
        /*Once again, this will be your margin left and margin-right*/
    max-width: 80rem; 
}

/*Screen-reader only elements*/
    /*This utility class  keeps the element in the DOM and just hides it visually. It's therefore still accessible to screen readers. Whereas display:none takes it completely out of the DOM*/
.sr-only {
    position: absolute; 
    width: 1px; 
    height: 1px; 
    padding: 0; 
    margin: -1px; 
    overflow: hidden; 
    clip-path: inset(10000px);
    white-space: nowrap; 
    border: 0;
}

/* Colours */
    /*I'm using both variables and non-variables incase the browser doesn't support the variables. If it does it'll have the last say and therefore render, if it doesn't then it will be ignored and just the original css rule will render*/
.bg-dark { 
    background-color:hsl(0 0% 9%); 
    background-color: hsl(var(--clr-dark));
}

.bg-white { 
    background-color: hsl(0 0 100%); 
    background-color: hsl(var(--clr-white));
}

.bg-accent {
    background-color: hsl(60 100% 50%); 
    background-color: hsl(var(--clr-accent));
}

.bg-gray {
    background-color: hsl(0 0% 55%); 
    background-color: hsl(var(--clr-gray));
}

.text-dark { 
    color:hsl(0 0% 9%); 
    color: hsl(var(--clr-dark));
}
.text-white { 
    color:hsl(0 0% 100%); 
    color: hsl(var(--clr-white));
}
.text-accent { 
    color:hsl(60 100% 50%); 
    color: hsl(var(--clr-accent));
}
.text-gray {
    color: hsl(0 0% 55%); 
    color: hsl(var(--clr-gray));
}

/*Typography*/
.ff-sans-serif { 
    font-family: "Outfit", sans-serif;
    font-family: var(--ff-sans-serif);
}

.letter-spacing-1 {letter-spacing: 2.35px;}
.letter-spacing-2 {letter-spacing: 2.7px;}
.letter-spacing-3 {letter-spacing: 4.75px;}

.uppercase {text-transform: uppercase;}

.fs-900 {
    font-size:9.375rem; 
    font-size:var(--fs-900);

}
.fs-800 {
    font-size:6.25rem; 
    font-size:var(--fs-800);
}
.fs-700 {
    font-size: 3.5rem; 
    font-size: var(--fs-700);
}
.fs-600 {
    font-size: 2rem; 
    font-size: var(--fs-600);
}
.fs-500 {
    font-size: 1.75rem; 
    font-size: var(--fs-500);
}
.fs-400 {
    font-size: 1.125rem; 
    font-size: var(--fs-400);
}
.fs-300 {
    font-size: 1rem; 
    font-size: var(--fs-300);
}
.fs-200 {
    font-size: 0.875rem; 
    font-size: var(--fs-200);
}

    /*When bigger fonts break/word wrap, the line-height may be an issue,this fixes that*/
.fs-900, 
.fs-800, 
.fs-700, 
.fs-600 {
    line-height: 1.1;
}


    /* Mini-Component Classes  */ 
        /*they're component classes that can be applied like utility classes*/
.tag {
    background-color:hsl(60 100% 50%);
    background-color: hsl(var(--clr-accent));
    color:hsl(0 0% 9%);
    color: hsl(var(--clr-dark)); 
    padding: 1em 2em;
    padding: var(--padding-smaller, 1em 2em); 
        /*using em ensures that if the font were to change the padding would grow or shrink with it */
    border-radius: 100vw;
}

/*Not including the navigation buttons*/
.small-button {
    background-color: hsl(0 0% 9%);
    background-color: hsl(var(--clr-dark));
    color: hsl(60 100% 50%); 
    color: hsl(var(--clr-accent));
    padding: 2em 4em;
    padding: var(--padding-bigger, 2em 4em);
    border: 2px solid hsl(60 100% 50%);
    border: 2px solid hsl(var(--clr-accent));
    border-radius: 100vw;
}

.small-button:hover,
.small-button:focus {
    background-color: hsl(60 100% 50%);
    background-color: hsl(var(--clr-accent));
    color: hsl(0 0% 9%); 
    color: hsl(var(--clr-dark));
}


